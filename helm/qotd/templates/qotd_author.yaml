kind: Deployment
apiVersion: apps/v1
metadata:
  name: qotd-author
  namespace: {{ .Values.appNamespace }}
  labels:
    app: qotd
    tier: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qotd-author
  template:
    metadata:
      labels:
        app: qotd-author
    spec:
      restartPolicy: Always
      containers:
        - name: qotd-author
          image: registry.gitlab.com/quote-of-the-day/qotd-author-service/{{ .Values.imageTag }}:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3002
              protocol: TCP
          env:
            - name: LOG_LEVEL
              value: "INFO"
            - name: ENABLE_INSTANA
              value: "{{ .Values.enableInstana }}"
            - name: ANOMALY_GENERATOR_URL
{{ if eq .Values.useNodePort true }}
              value: "qotd-usecase.{{ .Values.loadNamespace }}.svc.cluster.local:3012/services/author"
{{ else }}
              value: "http://qotd-usecase-{{ .Values.loadNamespace }}.{{ required "Name of anomaly host is required" .Values.host }}/services/author"
{{ end }}
            - name: IMAGE_SVC
              value: "qotd-image.{{ .Values.appNamespace }}.svc.cluster.local:3003"
            - name: DB_HOST
              value: "qotd-db.{{ .Values.appNamespace }}.svc.cluster.local"
            - name: DB_USER
              value: "root"
            - name: DB_PASS
              value: "root"
            - name: DB_NAME
              value: "qotd"
{{ if eq .Values.roksCluster true }}
            - name: INSTANA_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
{{ end }}
          livenessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              cpu: "25m"
              memory: "350Mi"
            limits:
              cpu: "200m"
              memory: "800Mi"

{{ if eq .Values.useNodePort true }}

---
apiVersion: v1
kind: Service
metadata:
  name: qotd-author
  namespace: {{ .Values.appNamespace }}
  labels:
    app: qotd
    tier: api
spec:
  type: ClusterIP
  ports:
    - port: 3002
      targetPort: 3002
      protocol: TCP
      name: http
  selector:
    app: qotd-author

{{ else }}

---
apiVersion: v1
kind: Service
metadata:
  name: qotd-author
  namespace: {{ .Values.appNamespace }}
  labels:
    app: qotd
    tier: api
spec:
  type: ClusterIP
  ports:
    - port: 3002
      targetPort: 3002
      protocol: TCP
      name: http
  selector:
    app: qotd-author
  
{{ end }}

